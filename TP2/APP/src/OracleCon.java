/*
Nom : Carl Montpetit
Code permanent : MONC08069000

Nom : Matthew Jovani
Code permanent : JOVM19108705

Nom : Mathieu Dumont
Code permanent : DUMM21059400
*/
/*--------------------------------------------------------------------------------------------------------------------*/
// L'APPLICATION JAVA //
/*--------------------------------------------------------------------------------------------------------------------*/
/*
    Id #10 --> Priorit√© : Tr√®s important

    D√©velopper une application affichant la liste des employ√©s et des visiteurs qui √©taient √† l‚Äôusine entre deux dates
    et qui ont visit√© un d√©partement sp√©cifique.
*/
// Importation la totalit√© de la biblioth√®que de java.sql
package net.codejava;

import oracle.sql.DATE;

import java.sql.*;

class OracleCon {
    public static void main( String args[] ) throws ClassNotFoundException {
        // Java version 16 est utilis√© et FONCTIONNE ‚¨áÔ∏é
        //************************************************************************************************************//
        // ‚ú¶Constantes utiles‚ú¶
        //************************************************************************************************************//
        // Informations
        final String nomUtilisateur = "userName"; // FIXME ‚û¨ mettre son nom utilisateur Oracle ‚òû UqamÔ∏é Ô∏èÔ∏èÔ∏é‚ö†Ô∏è
        final String motDePasse = "ABC123"; // FIXME ‚û¨ mettre son mot de passe Oracle ‚òû UqamÔ∏é Ô∏èÔ∏èÔ∏é‚ö†Ô∏è
        final String nomServeur = "zeta2.labunix.uqam.ca";
        final String URLbaseDeDonnees = "jdbc:oracle:thin:@zeta2.labunix.uqam.ca:1521:baclab";
        // S√©parateur entre les affichages et les messages
        final String line = "====================================================";
        // Messages
        final String succesConnection = "‚úîÔ∏é Connect√© √† la base de donn√©es !..üîê";
        final String fermeture = "‚úîÔ∏é Fin de la requ√™te, fermeture de la connection!..üîí";
        final String erreurConnection = "‚úó √âchec, la connection √† la base de donn√©es a √©chou√©e!..‚ö†Ô∏è";

        //************************************************************************************************************//
        // √©tape #1 : chargement des driver de la classe
        //************************************************************************************************************//
        /* Il faut pr√©alablement t√©l√©charger le driver Oracle ojdbc11 √† l'adresse :
        https://www.oracle.com/ca-en/database/technologies/appdev/jdbc-downloads.html

        Et ensuite ajouter les d√©pendances : (je l'ai fais dans intelliJ Ultimate)
        1) Aller dans project structure
        2) modules ‚üπ dependencies ‚üπ + (symbole) ‚üπ JARS ‚üπ choisir l'emplacement local de ojdbc11.jar
        3) ‚üπ apply ‚üπ OK
         */
        //************************************************************************************************************//
        // √©tape #2 : cr√©ation d'un object de connection avec le serveur zeta2 de l'UQAM
        //************************************************************************************************************//
        try ( Connection connection = DriverManager.getConnection( URLbaseDeDonnees, nomUtilisateur, motDePasse ) ) {
            if ( connection != null ) {
                System.out.println( line );
                System.out.println( succesConnection );
                System.out.println( line );
            } else {
                System.out.println( erreurConnection );
            }

            //********************************************************************************************************//
            // √©tape #3 : cr√©ation de l'object de statement
            //********************************************************************************************************//
            Statement statement = connection.createStatement( );

            //********************************************************************************************************//
            // √©tape #4 : execution de la requ√™te SQL
            //********************************************************************************************************//
            // La requ√™te SQL pour le TP2
            CallableStatement fonctionPresenceDepartement = connection.prepareCall( "DECLARE\n" +
                    "v_resultat varchar2(500);\n" +
                    "BEGIN\n" +
                    "v_resultat := f_presence_departement('2021-05-01','2021-07-25','Production');\n" +
                    "END;" );
            // On applique des valeurs aux param√®tres de la procedure
            fonctionPresenceDepartement.setDate( 1, Date.valueOf( "2021-05-01" ) );
            fonctionPresenceDepartement.setDate( 2, Date.valueOf( "2021-07-25" ) );
            fonctionPresenceDepartement.setString( 3, "Production" );
            // On enregistre les param√®tres
            fonctionPresenceDepartement.registerOutParameter( 1, Types.DATE );
            fonctionPresenceDepartement.registerOutParameter( 2, Types.DATE );
            fonctionPresenceDepartement.registerOutParameter( 3, Types.VARCHAR );
            // On ex√©cute la proc√©dure avec les param√®tres ‚üπ affiche rien √† la console, mais fonctionne
            fonctionPresenceDepartement.execute( );

            //********************************************************************************************************//
            // ‚ö†Ô∏èNOTES‚ö†Ô∏è
            //********************************************************************************************************//
            // Je n'ai seulement pas r√©ussie √† imprimer le contenu de la variable v_resultat qui contient le retour
            // de la fonction du PL/SQL si haut ‚áß : (dans SQL developer)
            //Il n'existe aucune pr√©sence entre ces deux dates pour cet enregistrement!..
            //Il n'existe aucune pr√©sence entre ces deux dates pour cet enregistrement!..
            //Il n'existe aucune pr√©sence entre ces deux dates pour cet enregistrement!..
            //Il n'existe aucune pr√©sence entre ces deux dates pour cet enregistrement!..
            //Il n'existe aucune pr√©sence entre ces deux dates pour cet enregistrement!..
            //Pr√©sence de ‚ü∫Carla ‚ü∫ du d√©partementProduction ‚ü∫ pour le 21-06-23 06:00:00.000000

            //********************************************************************************************************//
            // Des essaies et des tests vari√©s pour tester l'application
            //********************************************************************************************************//
            // On exctrait les param√®tres dans des variables
//            Date param1 = procedurePresenceDepartement.getDate(1);
//            Date param2 = procedurePresenceDepartement.getDate(2);
//            String param3 = procedurePresenceDepartement.getString(3);
            // On affiche les param√®tres √† la console
//            System.out.println("param1 : " + param1);
//            System.out.println("param2 : " + param2);
//            System.out.println("param3 : " + param3);

            // Un test sur la table "dummy" de Oracle pour sortir la date du syst√®me
//            ResultSet resultSet = statement.executeQuery( "SELECT SYSDATE FROM DUAL" );
//            if ( resultSet.next( ) ) {
//                Date dateCourante = resultSet.getDate( 1 ); // get la premi√®re colonne
//                System.out.println( "La date courante est : " + dateCourante );

            // Un test pour afficher le contenu d'une table
//            ResultSet resultSet = statement.executeQuery( "SELECT * FROM employe" +
//                    "END;" );
//            while ( resultSet.next( ) )
//                System.out.println( resultSet.getInt( 1 ) +
//                        "\t\t" + resultSet.getString( 2 ) +
//                        "\t\t" + resultSet.getString( 3 ) +
//                        "\t\t" + resultSet.getString( 4 ) +
//                        "\t\t" + resultSet.getString( 5 ));
//            }

            //********************************************************************************************************//
            // √©tape #5 : fermer la connection √† l'object
            //********************************************************************************************************//
            connection.close( );
//            resultSet.close( );
            fonctionPresenceDepartement.close( );
//            statement.close( );
            System.out.println( line );
            System.out.println( fermeture );
            System.out.println( line );

            //********************************************************************************************************//
            // Attraper les exception s'il y en a
            //********************************************************************************************************//
        } catch ( SQLException e ) {
            System.err.format( "SQL State: %s\n%s", e.getSQLState( ), e.getMessage( ) );
        } catch ( Exception e ) {
            e.printStackTrace( );
        }

        //************************************************************************************************************//
        // ‚òÜFIN DE L'APPLICATION JAVA‚òÜ
        //************************************************************************************************************//
    }
}